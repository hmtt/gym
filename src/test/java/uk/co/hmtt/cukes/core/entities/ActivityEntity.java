package uk.co.hmtt.cukes.core.entities;

import org.springframework.stereotype.Component;
import uk.co.hmtt.cukes.core.annotations.AutoGenerated;
import uk.co.hmtt.cukes.core.annotations.Bind;
import uk.co.hmtt.cukes.core.annotations.Unique;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import static java.util.Collections.singletonList;

@Component
public class ActivityEntity implements Cloneable, Entity<ActivityEntity> {

    @AutoGenerated
    private int id;
    @Bind
    @Unique
    private String className;
    @Bind
    @Unique
    private String classDate;
    @Bind
    private Date lastChecked;

    public static final String CLASS_NAME = "className";
    public static final String CLASS_DATE = "classDate";
    public static final String LAST_CHECKED = "lastChecked";
    public static final String ID = "id";
    private static EntityDao entityDao;

    private List<ExclusionEntity> exclusionEntities = new ArrayList<>();

    public static void setEntityDao(EntityDao dao) {
        entityDao = dao;
    }

    public static ActivityEntity buildActivityEntity() {
        return new ActivityEntity().
                withClassName("The Peak - Velocity Spin").
                withClassDate("Velocity Blast Wed 16:15").
                withLastChecked(new Date());
    }

    @Override
    public ActivityEntity mapRow(ResultSet resultSet, int i) throws SQLException {
        return ActivityEntity.buildActivityEntity()
                .withId(resultSet.getInt(ID))
                .withClassName(resultSet.getString(CLASS_NAME))
                .withClassDate(resultSet.getString(CLASS_DATE))
                .withLastChecked(resultSet.getDate(LAST_CHECKED));
    }

    @Override
    public String getTableName() {
        return EntityDao.TABLE_NAME.ACTIVITY.toString();
    }

    @Override
    public ActivityEntity persist() {
        entityDao.insert(ActivityEntity.class, singletonList(this));
        return this;
    }

    public int getId() {
        return id;
    }

    public ActivityEntity withId(int id) {
        this.id = id;
        return this;
    }

    public String getClassName() {
        return className;
    }

    public ActivityEntity withClassName(String className) {
        this.className = className;
        return this;
    }

    public String getClassDate() {
        return classDate;
    }

    public ActivityEntity withClassDate(String classDate) {
        this.classDate = classDate;
        return this;
    }

    public ActivityEntity withLastChecked(Date lastChecked) {
        this.lastChecked = lastChecked;
        return this;
    }

    public ActivityEntity withExclusion(ExclusionEntity exclusionEntity) {
        this.exclusionEntities.add(exclusionEntity);
        return this;
    }

    public List<ExclusionEntity> getExclusions() {
        return exclusionEntities;
    }

    public void setId(int id) {
        this.id = id;
    }

    public void setClassName(String className) {
        this.className = className;
    }

    public void setClassDate(String classDate) {
        this.classDate = classDate;
    }

    public void setLastChecked(Date lastChecked) {
        this.lastChecked = lastChecked;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ActivityEntity that = (ActivityEntity) o;

        if (className != null ? !className.equals(that.className) : that.className != null) return false;
        return !(classDate != null ? !classDate.equals(that.classDate) : that.classDate != null);

    }

    @Override
    public int hashCode() {
        int result = className != null ? className.hashCode() : 0;
        result = 31 * result + (classDate != null ? classDate.hashCode() : 0);
        return result;
    }

}
